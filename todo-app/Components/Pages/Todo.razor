@page "/todo"
@using Models;
@using Microsoft.EntityFrameworkCore;
@inject AppDbContext DbContext

<h3>To-Do Application</h3>

<input @bind="newTaskDescription" placeholder="Enter a new task" />
<button @onclick="AddTask">Add task</button>

<ul>
    @foreach (var task in tasks)
    {
        <li>
            <input type="checkbox" @bind="task.IsCompleted" @onchange="() => UpdateTask(task)" />
            @task.Description
            <button @onclick="() => RemoveTask(task)">Delete</button>
        </li>
    }
</ul>

@code {
    private string? newTaskDescription;
    private List<TaskItem> tasks = new();

    protected override async Task OnInitializedAsync()
    {
        tasks = await DbContext.Tasks.ToListAsync();
    }

    private async Task AddTask()
    {
        if (!string.IsNullOrWhiteSpace(newTaskDescription))
        {
            var newTask = new TaskItem { Description = newTaskDescription };
            DbContext.Tasks.Add(newTask);
            await DbContext.SaveChangesAsync();

            tasks.Add(newTask);
            newTaskDescription = string.Empty;
        }
    }

    private async Task RemoveTask(TaskItem task)
    {
        DbContext.Tasks.Remove(task);
        await DbContext.SaveChangesAsync();

        tasks.Remove(task);
    }

    private async Task UpdateTask(TaskItem task)
    {
        DbContext.Tasks.Update(task);
        await DbContext.SaveChangesAsync();
    }
}